['\n        The identification of conserved syntenic regions enables discovery of predicted\nlocations for orthologous and homeologous genes, even when no such gene is present.\nThis capability means that synteny-based methods are far more effective than sequence\nsimilarity-based methods in identifying true-negatives, a necessity for studying gene\nloss and gene transposition. However, the identification of syntenic regions requires\ncomplex analyses which must be repeated for pairwise comparisons between any two\nspecies. Therefore, as the number of published genomes increases, there is a growing\ndemand for scalable, simple-to-use applications to perform comparative genomic\nanalyses that cater to both gene family studies and genome-scale studies. We\nimplemented SynFind, a web-based tool that addresses this need. Given one query\ngenome, SynFind is capable of identifying conserved syntenic regions in any set of\ntarget genomes. SynFind is capable of reporting per-gene information, useful for\nresearchers studying specific gene families, as well as genome-wide data sets of\nsyntenic gene and predicted gene locations, critical for researchers focused on\nlarge-scale genomic analyses. Inference of syntenic homologs provides the basis for\ncorrelation of functional changes around genes of interests between related\norganisms. Deployed on the CoGe online platform, SynFind is connected to the genomic\ndata from over 15,000 organisms from all domains of life as well as supporting\nmultiple releases of the same organism. SynFind makes use of a powerful job execution\nframework that promises scalability and reproducibility. SynFind can be accessed at\nhttp://genomevolution.org/CoGe/SynFind.pl. A video tutorial of SynFind\nusing Phytophthrora as an example is available at http://www.youtube.com/watch?v=2Agczny9Nyc.\n      ', 'Associate editor: Kenneth Wolfe', 'The identification of conserved syntenic regions enables discovery of predicted\nlocations for orthologous and homeologous genes, even when no such gene is present.\nThis capability means that synteny-based methods are far more effective than sequence\nsimilarity-based methods in identifying true-negatives, a necessity for studying gene\nloss and gene transposition. However, the identification of syntenic regions requires\ncomplex analyses which must be repeated for pairwise comparisons between any two\nspecies. Therefore, as the number of published genomes increases, there is a growing\ndemand for scalable, simple-to-use applications to perform comparative genomic\nanalyses that cater to both gene family studies and genome-scale studies. We\nimplemented SynFind, a web-based tool that addresses this need. Given one query\ngenome, SynFind is capable of identifying conserved syntenic regions in any set of\ntarget genomes. SynFind is capable of reporting per-gene information, useful for\nresearchers studying specific gene families, as well as genome-wide data sets of\nsyntenic gene and predicted gene locations, critical for researchers focused on\nlarge-scale genomic analyses. Inference of syntenic homologs provides the basis for\ncorrelation of functional changes around genes of interests between related\norganisms. Deployed on the CoGe online platform, SynFind is connected to the genomic\ndata from over 15,000 organisms from all domains of life as well as supporting\nmultiple releases of the same organism. SynFind makes use of a powerful job execution\nframework that promises scalability and reproducibility. SynFind can be accessed at\nhttp://genomevolution.org/CoGe/SynFind.pl. A video tutorial of SynFind\nusing Phytophthrora as an example is available at http://www.youtube.com/watch?v=2Agczny9Nyc.', 'Conserved synteny refers to an inferred homology relationship between genes which are\nsupported by sharing a common genomic neighborhood, and is a widely used measurement of\nevolutionary divergence across all domains of life (Moreno-Hagelsieb et al. 2001; Engstrom et al. 2007; Heger and Ponting 2007; Poyatos and\nHurst 2007; Tang, Bowers, et al.\n2008). Conserved synteny is evident when large sets of genes or genomic\nfeatures are preserved in close proximity (synteny), and often in the same order and\norientations (colinearity) (Tang, Bowers, et al.\n2008). Conserved synteny across species lays an essential foundation for\ngenomic research, including map-based cloning, validating predicted gene models (Law et al. 2015), and identifying conserved\nnoncoding sequences (Haudry et al. 2013).\nConserved synteny within species identifies ancient polyploidy events or other types of\nlarge-scale genomic duplications (Wolfe\n2001).', 'Synteny provides an extra layer of information to confirm gene homology, and is much\nmore reliable than inference based on sequence similarities alone. Results from a\ntypical Basic Local Alignment Search Tool (BLAST) analyses do not easily indicate\nwhether there is a gene loss or transposition. Popular approaches based on the\nreciprocal best hit do not take into account the ancestral state of a genome nor provide\nmuch insight into the evolutionary history of a gene or gene family. More generally,\nprotein clustering algorithms such as OrthoMCL (Li et al. 2003) and INPARANOID (Ostlund et al. 2010) may be successful for single copy gene families when\nevolutionary rates are constant, but can be confounded by accelerated rates of evolution\nin certain gene copies, and will sometimes produce false-positive assignments of\northology, particularly in cases of reciprocal loss of paralogous genes between species.\nPositional studies that track gene movements over evolutionary time require more\ngene-centric synteny tools (Woodhouse et al.\n2011).', 'Curated syntenic gene sets are critical tools for deriving genome-scale patterns and\nevolutionary trends, and are widely popular (Woodhouse et al. 2011; Baxter et al.\n2012; Schnable et al. 2012).\nUnfortunately, construction of robust and accurate syntenic data sets requires a set of\nspecialized comparative genomic skills currently limited to a small number of research\ngroups. Until now, the primary method by which the broader research community employed\nsyntenic information in their research is through manually curated syntenic gene sets\npublished by these groups. Manually curated gene sets are inherently limiting because,\nas a result of the lag introduced by the publication cycle, by the time a given syntenic\ngene set is published, genome assemblies for new species will often have become\navailable, and genome assemblies, annotations, and gene identifiers will often have been\nupdated for existing published genomes. Genome sequence assemblies being released at an\never increasing pace, there is a need for tools that enable individual researchers to\nrapidly identify syntenic regions between species.', 'The majority of community use of synteny data generally falls into one of several use\ncases: 1) Researchers interested in a specific gene from a specific species who want to\nrapidly find the syntenic ortholog(s) of their target gene in one or more additional\nspecies and 2) researchers who want to trace changes in the positional history of a\nsingle gene or gene family across a population of related species. In addition to the\nlag time introduced in publishing syntenic gene lists, most published lists only provide\ninformation on conserved syntenic orthologs, but do not provide information on predicted\nsyntenic locations for genes where no syntenic orthologs are found. This severely limits\ntheir utility for use case #2 above, as it strips out one of the key advantages of\nsyntenic analysis, the ability to identify confident sets of “true\nnegatives.” True negatives include both lineage specific, recently inserted genes\n(also known as the “gray genome”) (Freeling et al. 2008), and genes conserved at syntenic locations across\nmultiple species in a clade but deleted from the genomes of one or more specific\nspecies. Many evolutionary studies require the knowledge of whether a certain gene is\nindeed missing or relocated from a genomic region (transposition). Distinguishing\ntransposition from gene removal is critical because potential changes in gene expression\npatterns are different under these two scenarios.', 'Identification of syntenic genes has additional advantages for functional research\nstudies, as syntenic homologs are more likely to retain the same expression pattern than\nnonsyntenic homologs (Dewey 2011; Schnable 2015). Orthologous genes (as\nidentified by OrthoMCL) at nonsyntenic locations show reduced correlation in expression\npattern between different grass species (Davidson\net al. 2012). Genes captured by helitrons and relocated to a new genomic\nneighborhood in maize show novel patterns of expression (Barbaglia et al. 2012). Common methods of gene\ntransposition—transposon capture (Lai et\nal. 2005) and intrachromosomal recombination (Woodhouse et al. 2010)—can often carry protein-coding\nsequence of a gene without the associated regulatory sequences. A study in maize also\nfound that genes that retain in syntenic positions across multiple grass species were\nsignificantly more likely than nonsyntenic genes to produce visible mutant phenotypes\nwhen knocked out (Schnable and Freeling\n2011), further highlighting the functional relevance of synteny information in\nthe validation of direct functional homologs.', 'As we provide a novel implementation of yet another synteny-finding tool, we offer an\noverview of popular synteny-finding algorithms, including several tools that were\ndesigned and implemented by several of the authors in the past. In general, the\nsynteny-finding algorithms can be grouped based on whether they are based on positional\ncolinearity or positional density, for what type of statistical features they are\nsearching (Ghiurcuta and Moret 2014), and\ntheir definition of “syntenic block.” A list of recent synteny search\nsoftware includes iAdHore (Proost et al.\n2012), mGSV (Revanna et al.\n2012), SyMap (Soderlund et al.\n2011), SynMap (Lyons et al. 2008),\nOrthocluster (Vergara and Chen 2010),\nSynorth (Dong et al. 2009), MCScan (Tang, Wang, et al. 2008), and MCScanX (Wang et al. 2012) among many others. These\nsynteny search software vary greatly in the trade-offs accepted by the authors in terms\nof run time, computational resource requirements, and goal of minimizing either type I\n(false positive) or type II (false negative) errors. In addition, from a pragmatic\nstandpoint, the tools are also distinguished by interface type (i.e., command line, web\nbased) and whether a given tool offers the built-in functionality to provide graphical\noutputs, enabling visual proofing of results. Herein, we provide a review of major\nfeatures of recent synteny-finding software in table 1. Table 1Comparison of Major Features of Synteny-Based Homology Detection SoftwareToolReferencesInterfaceMultiple GenomesSyntenic FamiliesInfer Gene LossScoring ModeParallel ComputingIntegration with DataColinearScanWang et al. (2006)Command−−−Colinear−−CintenySinha and Meller\n(2007)Web+−−Colinear−Limited (∼20)MCScanTang, Bowers, et al.\n(2008)Command++−Colinear−−SynMapLyons et al. (2008)Web−−−Hybrid−CoGe (∼25K)MCMuSeCLing et al. (2009)Command+++Synteny−−OrthoClusterDBNg et al. (2009)WebLimited−−Colinear−Limited (∼50)CyntenatorRodelsperger and Dieterich\n(2010)Command+−−Colinear−−MicroSynCai et al. (2011)GUI++−Synteny−−SyMAPSoderlund et al.\n(2011)GUI/Web+−−Hybrid−Limited (∼10)MCScanXWang et al. (2012)Command++−Colinear−−i-ADHoReProost et al. (2012)Command++−Both/Hybrid+−SynFindCommand/Web+++Both+CoGe (∼25K)Note.—The tools published in the last 10 years are given in\nthe table. Symbols + and − represent yes and no, respectively.\n“Scoring mode” is the optimization goal used in identifying\nsyntenic regions. “Colinear” requires the gene order to be\npreserved; “Synteny” does not enforce conserved gene order;\n“Hybrid” uses “Colinear” initially and recruits\nimperfect synteny; “Both” supports both modes as program\noptions. “Integration with data” is a count of available genomes\nfor immediate use with a given tool.', 'Comparison of Major Features of Synteny-Based Homology Detection Software', 'Note.—The tools published in the last 10 years are given in\nthe table. Symbols + and − represent yes and no, respectively.\n“Scoring mode” is the optimization goal used in identifying\nsyntenic regions. “Colinear” requires the gene order to be\npreserved; “Synteny” does not enforce conserved gene order;\n“Hybrid” uses “Colinear” initially and recruits\nimperfect synteny; “Both” supports both modes as program\noptions. “Integration with data” is a count of available genomes\nfor immediate use with a given tool.', 'A careful evaluation of these algorithms suggested fundamental challenges that are still\nnot met for more general uses. First and foremost, data curation is often a significant\nchallenge (Lohr 2014), requiring users to\nconvert genomic annotation files into a range of idiosyncratic file formats required by\ndifferent algorithms. Many tools are run from the command line, and often obtaining the\nmost accurate results from a given tool will require experimentation with a range of\nsettings, presenting an additional challenge to users who must develop methods of\nevaluating and ranking multiple output data sets. As the number of organisms a user is\ninterested in comparing grows, computational time requirements will often scale\nquadratically, presenting challenges for these primarily offline algorithms.', 'After closely working with researchers in the community in the past few years, it was\nclear that the life cycle of gene synteny analysis requires running multiple algorithms\nto create input homology data (different BLAST-like algorithms), adjusting parameters\non-the-fly (configurable thresholds), as well as allowing different\nsynteny-finding/scoring schemes (colinear vs. density) (table 1). Following the same design principle as other CoGe\ntools, we continue to adopt a cloud-based implementation that offers a one-stop solution\nthat combines user-configurable input data (genomes and structural annotations),\nalgorithms, scalable computing resources (parallelization, memory, and storage),\nintegrated visualization, links to additional tools for further data analysis, readily\nexportable results, and reproducibility through permanent URLs.', 'Our new online method, SynFind, has a number of features not typically found in other\nsystems (table 1) that reflect recent\ninnovations in comparative genomic analysis adopted in a few newly sequenced genomes\n(Amborella Genome Project 2013; Ibarra-Laclette et al. 2013; Chalhoub et al. 2014; Green et al. 2014). SynFind identifies multiple syntenic\nregions between a gene in a reference genome and a target genome, entirely independently\nof whether syntenic ortholog or paralog is present at the predicted location or not.\nSynFind provides the option for both density and colinear scoring of syntenic regions to\naddress the different structural genomic changes in taxa with different evolutionary\ndistances and different genome assembly qualities. SynFind generates syntenic depth\ntables as well as gene presence–absence table to reveal ancient polyploidy events\nand genes unique to one genome against others. Most critically, the integration with\nCoGe provides instant access to thousands of genomes across all domains of life along\nwith CoGe’s tools to let users add new genomes, keep them private, and compare\nthem using SynFind as rapidly as they are released. Tight integration with up-to-date\ngenomic data facilitates access to computing resources, downstream visualization and\nanalysis tools, thereby creating an open-ended pipeline of research that facilitates\nexploration of multidimensional genomic data sets that bridge evolutionary genomics and\nfunctional genomics.', 'SynFind processes putatively homologous gene pairs in order to extract the syntenic\nblocks, using each gene as query. Gene pairs are computed from sequence similarity\nsearch programs, such as BLAST, LASTZ, or LAST (Kielbasa et al. 2011). The modular architecture of SynFind\nallows the straightforward incorporation of new sequence similarity search algorithms\nin the future. Although SynFind can output information for a single gene, in each\nrun, syntenic regions in the target genome(s) are identified for every annotated gene\nin the query genome. Extra caution is taken with genes which are members of tandem\narrays (groups of homologous genes clustered together in the genome) as matches among\nsuch genes are likely overcounted and show up as false-positive synteny blocks.\nConsequently, tandem matches are reduced to a single copy in this step to avoid\nseeding a synteny block inside a tandem array. The treatment of tandem arrays is\nsimilar to the strategy used in MCScanX and iADHoRe (Proost et al. 2012; Wang et al. 2012).', 'To seed synteny blocks, our algorithm works by selecting a fixed number of genes up\nand downstream from the query gene (fig.\n1A). This method is robust with respect to variation in\ngene density and intergenic spacing observed across different species. All gene pairs\nto a target genome between the region surrounding the gene of interest and candidate\nsyntenic locations in the target genome are then identified and the number of\nmatching gene pairs is counted as the “synteny score” (fig. 1B). SynFind provides\npositioning cues for visualization through genome browsers. Comparisons across sets\nof homologous regions are facilitated through automated centering and truncation of\ncolinear panels. The middle gene of the current window or the “query” is\nused to as the center of the syntenic panels. The extent of syntenic gene pairs in\nthe current window can be used to truncate the matching panels to focus on a\nparticular region of interest. Finally, SynFind automatically flips sequences so\nsyntenic regions are visualized on the same strand for clarity. These data are useful\nin automatically creating local syntenic views in CoGe for subsequent manual\nvalidation. Fig. 1.—Illustration of three key steps in SynFind. The three key steps include\n(A) extraction of genomic neighborhood,\n(B) gene pair generation and scoring of each matching\nregion, and (C) identification of flankers (neighboring\ngene pairs) and annotation of syntelog class.', 'Illustration of three key steps in SynFind. The three key steps include\n(A) extraction of genomic neighborhood,\n(B) gene pair generation and scoring of each matching\nregion, and (C) identification of flankers (neighboring\ngene pairs) and annotation of syntelog class.', 'The output of the seeding step consists of syntenic gene pairs and a score to\nindicate the level of conserved synteny between their respective genomic locations.\nFor each target region found, the synteny score reflects the number of gene pairs\nthat are syntenic or colinear within the window, depending on the scoring function.\nWhen a matching region is found, the flanking genes for the query gene are identified\nand the status of the syntelog is tracked in a single letter notation—S/F/G,\nfollowing the nomenclature in Woodhouse et al.\n(2011). S is “syntelog,” which means that it has a match to the\nregion. In this case, the match itself is used to represent the region. In contrast,\nF class and G class refer to the cases that the syntelog is missing (fractionated or\nmoved) from syntenic region identified in the target genome. F has both flankers\npresent, whereas G has only one flanker (fig.\n1C). G class syntenic regions are largely the result of\nadjacent genomic rearrangements (inversions and translocations) in either the target\nor query genome, but can also occur at the end of pseudomolecules, scaffolds, or\ncontigs. In the case of F or G, a flanker gene is used to represent the region as a\n“proxy” to identify the approximate location of where a syntelog is\nexpected to reside in the target genome.', 'As a final validation, we recover tandem matches by checking against the original\nBLAST output as the tandem matches were reduced to single copy prior to the\n“seeding” step. This validation step increases the sensitivity of SynFind\nfor genes inside tandem arrays. A single best match among the tandem array is\nselected to be the representative syntelog for a query gene, for the sake of clarity.\nThe source code of SynFind can be found at https://github.com/tanghaibao/quota-alignment/blob/master/scripts/synteny_score.py\n(last accessed November 30, 2015).', 'There are a few intuitive, user-configurable parameters that adjust sensitivity or\nspecificity of SynFind.', 'Given an anchor gene, SynFind searches upstream and downstream half a window size\nfrom the query. For example, a window size of 40 means that a total of 41 genes\nare checked: The query gene, plus 20 upstream genes and 20 downstream genes (fig. 1A).', 'Minimum synteny score: The minimum number of anchoring genes to\ncall a region “syntenic.”', 'The combination of “window size” and “minimum number of\ngenes” together controls the sensitivity and specificity of the algorithm\n(fig. 1B). The\ndefault number 4 means that a region is considered syntenic if 4 of 41 genes are\nsyntenic. This threshold is capable of finding weakly homologous regions, such as\nregions undergoing high degree of fractionation following polyploidy. In our test,\nmoving the threshold below 10% would often run into the risk of false\npositives due to repeats and gene transpositions.', 'Scoring can be based on colinearity or density. For colinearity, a colinear\narrangement of syntenic genes is enforced, based on the “longest increasing\nsubsequence” method (Woodhouse et al.\n2011). For density, we use single-linkage clustering to group gene pairs\nwithin the window in comparison, and any arrangement of gene-pairs is tolerated.\nAlthough colinearity is frequently used in plant genome comparisons, synteny\nwithout requiring shared order is often the only criteria in the comparison of\ninsect and vertebrate genomes, due to different rates and scales of inversions and\ntranslocations between plant and animal genomes (Tang, Bowers, et al. 2008). The two different scoring\nfunctions allow flexibility in accommodating taxa with different modes of\nkaryotypic evolutions.', 'This parameter is useful in lineages with shared duplication events. Enforcing the\nsyntenic depth allows screening of regions derived from specific evolutionary\nevents (Tang et al. 2011). In\nparticular, enforcing a maximum syntenic depth of 1 between species which are\ndiploid relative to each other, but share one or more ancient whole-genome\nduplications (WGDs) would limit the search to only orthologous regions. The\ndefault is to output all syntenic regions found.', 'SynFind is implemented as one of the main entry points and analytical tools of CoGe.\nThe user-interface (UI) contains two sections: One which is used to select a gene of\ninterest and target genomes to search for syntenic homologs, the other to specify\nSynFind’s algorithms and parameters (fig.\n2). This UI is consistent with the general look-and-feel for other CoGe\ntools. CoGe’s implementation of SynFind allows users to search an arbitrary\nnumber of genomes for syntelogs of any gene located in a genome to which the user has\naccess. Specifically, the genomes need to be any public data sets or private data\nsets that are owned by or shared with the user. Target genomes to be analyzed by\nSynFind are similarly specified by searching for organisms by name or taxonomic\ndescription, and then selecting the appropriate genome (fig. 2A). By repeating the name searches,\nseveral genomes may be added to the genome list (fig. 2B). Researchers may also select a previously saved\ngenome list (e.g., a list of “ten grass genomes that have been sequenced thus\nfar”) as a shortcut for researchers interested in a frequently accessed set of\nspecies. SynFind depends on the existence of structurally annotated protein coding\ngene models as a starting point for any query (fig. 2C). Some “draft” genome assemblies are\nreleased and loaded into CoGe with no available gene annotations. These genomes are\nautomatically detected and excluded from the genome list (with information presented\nto the user as to why the genome is blocked from analysis by SynFind). In the\nconfiguration tab, users can select which algorithm to use for generating the\nhomology pairs file as well as SynFind parameters: Window size, minimum number of\ngenes to call a region syntenic, and the scoring scheme (colinear or density) (fig. 2D). Fig. 2.—SynFind web UI. The web UI includes several components that users can\ninteract with (A) find target genome and select target\ngenome version, (B) build list of multiple target genomes,\n(C) input query gene, (D) set SynFind\nparameters.', 'SynFind web UI. The web UI includes several components that users can\ninteract with (A) find target genome and select target\ngenome version, (B) build list of multiple target genomes,\n(C) input query gene, (D) set SynFind\nparameters.', 'When SynFind completes its analysis, the results show a table of matching regions\nalong with their synteny scores and whether or not a syntenic gene was identified\n(fig. 3A). Additional\nlinks are available under the table, including microsynteny analysis of the\nidentified regions in GEvo for validation, pairwise syntenic dotplots in SynMap,\nlinks to raw data and intermediate data files, and a link to revisit and regenerate\nthe same SynFind analysis (fig.\n3B). Fig. 3.—SynFind example output. The output of a typical SynFind search:\n(A) List of all syntenic regions found and presence of\nsyntelog, (B) links for micro-synteny viewer (GEvo) and\nmaster tables for downstream analyses, (C) syntenic depth\ntable useful for evaluating syntenic coverage and WGD events.', 'SynFind example output. The output of a typical SynFind search:\n(A) List of all syntenic regions found and presence of\nsyntelog, (B) links for micro-synteny viewer (GEvo) and\nmaster tables for downstream analyses, (C) syntenic depth\ntable useful for evaluating syntenic coverage and WGD events.', 'SynFind identifies syntenic regions against any set of genomes given a gene in one\ngenome, and curates the results in a master gene list. The pan-genome master list is\nimportant as this file contains all the syntenic regions identified in the target\ngenomes for all of the genes in the query genome. The master list is a tab-delimited\ntable, containing all syntenic gene sets between the query and target genomes, along\nwith links to visualize microsynteny for each local set of region. As a filtering\noption, SynFind can also report top N best matches in query\ngenome(s), which is useful to extract only orthologous regions that are often the\nbest syntenic match when N is set to 1. As a byproduct of this\nmaster gene pairs table, SynFind reports a list of genes that are unique to some\ngenomes. For example, in the case of comparing a set of bacterial strains, this\nfeature can be used to find pathogenicity genes and phage insertions specific to one\nstrain against others (Tettelin et al.\n2005).', 'Syntenic depth refers to the number of syntenic regions identified in a target genome\nfor a given query position. SynFind calculates syntenic depth on a per gene basis and\nreports these data as a histogram, showing a breakdown of how many genes are covered\nin 1-, 2-, to x-fold regions (fig. 3C). Genes with a syntenic depth of zero are the\ngenes that lack any matching region in the target genome. A syntenic depth of one\nmost often reflects identification of an orthologous genomic region between two\nspecies, whereas a syntenic depth greater than 1 most often is the result of either\nparalogous or co-orthologous regions derived from whole-genome (or other large scale)\nduplications. Syntenic depth provides a more consistent marker for large scale\ngenomic events than changes in the copy number of individual genes which are\ninfluenced by a greater number of small scale processes (expansion and contraction of\ntandem arrays, transposon capture and duplication, etc.). The proportion of genes\nwith a syntenic depth of at least 1 is a useful metric for evaluating the relative\ncompleteness of genome assemblies, whereas modal and maximum syntenic depths are good\nindicators for the number of paleopolyploidies in a given lineage.', 'Plant genomes have rich history of genome-wide duplication events that give rise to\nvery high level of syntenic depth (Tang,\nBowers, et al. 2008). For example, in comparison to\nArabidopsis genome, both peach and grapevine genomes show\nsignificant genome coverage of depth up to 3 (fig. 3C), corresponding to the pan-rosid genome\ntriplication event (Lyons et al. 2008;\nTang, Bowers, et al. 2008). The\nsyntenic depth evaluation of SynFind was employed to identify multiple degenerate\npolyploidy events in the highly compact plant genome, Utricularia (Ibarra-Laclette et\nal. 2013). Examples of various syntenic depth tables and their interpretation in the\ncontext of paleopolyploidy can be found on CoGePedia (http://genomevolution.org/r/4suf, last accessed November 30,\n2015).', 'We show that SynFind is powerful for gene-centric analyses through selected examples\nbased on past studies, but the usage is generally applicable to almost any gene\nfamily members in any set of organisms available in the CoGe database. In the past,\nsuch comparative analyses would usually take much dedicated time and work—from\ndownloading and reformatting data sets, performing sequence alignment, reformatting\ndata again for use in synteny detection tools, identifying syntenic genes, selecting\ninformative visualization software for manual validation, and performing multiple\nanalyses to identify an optimal configuration of parameters and software\ntools—all of which can now be performed within the SynFind tool in a few\nclicks.', 'One natural application of SynFind is to deduce gene presence and absence across a\nset of related organisms. In the context of bacterial genomics, we can infer possible\npathogenic sequences through syntenic comparisons (Jin et al. 2002; Tettelin et al. 2005). We used SynFind to compare three-way\nShigella flexneri 2a strain 301, Escherichia\ncoli K12 substrain 1655 and Escherichia coli O157:H7\nstrain EDL933, in an analysis similar to the study in Jin et al. (2002). When using S. flexneri\ngenome as the query, we looked for the cases where SynFind reported either proxy in\nthe two E. coli genomes, that is, the genes that were missing in\ntheir expected locations or for which expected regions could not be identified. This\nhas allowed us to identify Shigella-specific\n“islands.” In particular, one 27 gene island (from\nSF0294 to SF0320) found only in the\nShigella genome, previously termed SfII, was shown to be a\nlysogenic phage insertion, by which Shigella might have acquired\nvirulence (Jin et al. 2002). Other interesting genes on these\nShigella-specific islands include ipaH genes\n(e.g., SF0722, SF1383, SF1880, and\nSF2610) that shared homology with different phages (Jin et al.\n2002). The SynFind link to this analysis is available: https://genomevolution.org/r/fggo (last accessed November 30,\n2015).', 'As our second example, we use another previously studied gene involved in the soft\ngrain trait in the grasses. Genes involved in the soft grain trait has been studied\nextensively in wheat, including the Hardness (Ha)\nlocus and several Ha-like genes (Charles et al. 2009). SynFind analysis (Brachypodium genes\nas “query,” barley, rice, and sorghum as “target”) showed\nthat Ha-like genes were present in Brachypodium representing the\nlineage of Pooideae, but were missing in rice and sorghum. For barley, rice and\nsorghum, SynFind output displays “proxy for region” rather than a direct\nsyntelog (fig. 4A). With\nvisual proofing using GEvo, we confirmed that there is a syntenic sequence match in\nbarley, whereas there are no matching sequences in rice and sorghum as indicated by\nSynFind (fig. 4B). This\nsuggested that the flanking regions of Ha-like gene were relatively\nintact whereas the gene itself has been lost in rice and sorghum. Alternatively, the\ngene could be inserted into this region in Brachypodium and barley. Although both\nscenarios are equally likely, previous study preferred the scenario that the gene was\nlost in rice and sorghum (Charles et al.\n2009). With SynFind tool, we have confirmed that the presence or absence of\nthe Ha-like gene in this set of syntenic regions nicely explains the\nsoft wheat and barley grains versus the hard grains like in rice and sorghum. Fig. 4.—SynFind analysis of Ha-like gene across Brachypodium,\nbarley, rice, sorghum. (A) SynFind table output\nillustrating four matching regions in the selected grasses. Result can be\nregenerated: https://genomevolution.org/r/iiv4 (last accessed November 30,\n2015). (B) GEvo visualization of the compiled syntenic\nregions, showing the presence of a syntenic sequence in barley, and lack of\nsyntenic ortholog in Ha-like gene in rice and sorghum. Each\npanel represents a syntenic region in Brachypodium, barley, rice, and\nsorghum, from top to bottom. Arrows in each panel represent gene models, and\nboxes on top of the gene models are sequence matches (HSPs). For the top\nBrachypodium panel, there are three tracks of HSPs, which are to barley, to\nrice and to sorghum, respectively. We can conclude that the\nHa-like gene in Brachypodium has match to barley and no\nmatch to rice and sorghum. Result can be regenerated: https://genomevolution.org/r/iivx (last accessed November 30,\n2015).', 'SynFind analysis of Ha-like gene across Brachypodium,\nbarley, rice, sorghum. (A) SynFind table output\nillustrating four matching regions in the selected grasses. Result can be\nregenerated: https://genomevolution.org/r/iiv4 (last accessed November 30,\n2015). (B) GEvo visualization of the compiled syntenic\nregions, showing the presence of a syntenic sequence in barley, and lack of\nsyntenic ortholog in Ha-like gene in rice and sorghum. Each\npanel represents a syntenic region in Brachypodium, barley, rice, and\nsorghum, from top to bottom. Arrows in each panel represent gene models, and\nboxes on top of the gene models are sequence matches (HSPs). For the top\nBrachypodium panel, there are three tracks of HSPs, which are to barley, to\nrice and to sorghum, respectively. We can conclude that the\nHa-like gene in Brachypodium has match to barley and no\nmatch to rice and sorghum. Result can be regenerated: https://genomevolution.org/r/iivx (last accessed November 30,\n2015).', 'In addition to the two examples shown above for the purpose of demonstration, SynFind\nhas enabled a number of evolutionary studies of important functional genes in diverse\nlineages (Woodhouse et al. 2010; Tang and Lyons 2012; Hofberger et al. 2013; Waters et al. 2013). For example, SynFind was used to\nscreen regions in the Aethionema arabicum genome displaying synteny\nto genomic regions in Arabidopsis thaliana harboring glucosinolate\nbiosynthesis (GS) loci (Hofberger et al. 2013). SynFind was essential in clarifying\nthe series of tandem duplication and WGD events that drove GS pathway expansion,\nwhich were critical to the evolutionary success to the mustard family (Hofberger et\nal. 2013). Also, SynFind was essential for proving that the genome of\nUtricularia gibba, despite is small size (82 MB), is derived from\nthree sequential WGD events (Ibarra-Laclette et al. 2013).', 'Clade-wide syntenic gene sets are useful for detecting genome-wide transposition and\ndeletion events (Woodhouse et al. 2010;\nSchnable et al. 2012), and\nautomation of this step could be essential in such studies. We have benchmarked\nSynFind against a number of studies that typically require a substantial amount of\nhuman curation to complete. Although the human curated gene sets are still imperfect\nand subject to errors, they serve as a basis for comparing between different synteny\nsearch tools including SynFind. In this study, we evaluate the performance of SynFind\nand compare that with competing software including MCScanX and iADHoRe, which are the\ntwo most popular state-of-the-art tools that perform well in a number of studies\n(Proost et al. 2012; Wang et al. 2012).', 'Our first set of test data is a list of WGD duplicates from A.\nthaliana curated by Bowers et al.\n(2003). This list contains a total of 5,788 gene duplicates collectively\nderived from the alpha, beta, and gamma WGDs (Bowers et al. 2003). Our second data set is based on comparison of yeast\ngenomes, using data from Yeast Gene Order Browser (YGOB) (Byrne and Wolfe 2005). We were able to find 14 yeast\ngenomes in the CoGe system, whereas a few yeast species in YGOB were not yet released\nto GenBank with structural gene annotations and therefore not included in this study.\nYGOB uses “pillars” to store homology assignments (Byrne and Wolfe 2005),\nwhich were converted to gene pairs for validation purposes. Finally, as the third\ntest set, we used a pan-grass synteny gene set curated by Schnable et al. (2012). Schnable et al. manually clustered\nand curated gene members from rice, Brachypodium, sorghum, and maize according to\ninter- and intragenomic comparisons (Schnable\net al. 2012). A typical set of syntenic genes in the Schnable set contain\nup to 2 rice genes, up to 2 Brachypodium genes, and up to 2 sorghum genes all derived\nfrom the shared pan-grass WGD, and up to 4 maize genes because of an additional\nmaize-specific WGD. Similarly, we converted families into a list of gene pairs before\nvalidation. The choice of these data sets is based on the availability of curated\ndata sets, and inclusion of gene sets with both paralogous and orthologous\nrelationships.', 'For SynFind, MCScanX, and iADHoRe, we computed the syntenic gene list and compared\nagainst the curated set, which are considered as “truth” (fig. 5). Two metrics are\ncomputed—“Sensitivity” (Sn) is defined as common items divided by\ntotal items in truth set; “Purity” (Pu) is defined as common items\ndivided by total items in the test set as can be used to infer false-positive\ndiscovery. SynFind consistently ranks the highest in sensitivity, recovering\n63%, 75%, and 61% of the items in the truth set (fig. 5). As a tradeoff, the purity of\nSynFind results compare less favorably than the other tools (fig. 5). As we have designed SynFind as a gene-centric\nquery tool, this benchmark reflects our focus on sensitivity—we would tolerate\nsome false positives but prefer to have low false negatives. Differences in the\ntreatments of tandem gene sets may have contributed to the nonoverlapping\nmembers—SynFind, MCScanX, and iADHoRe may have picked a single matching gene\nwithin the array which is not necessarily the tandem member in the curated set. Fig. 5.—Comparison of SynFind, MCScanX, and iADHoRe on curated data sets.\n(A) Arabidopsis thaliana alpha, beta,\nand gamma duplicates from Bowers et al. (2003). (B) Yeast\ngenomes from YGOB (Byrne and Wolfe 2005). (C) Grass genomes\nfrom Schnable et al. (2012).\nSn: sensitivity, defined as common items divided by total items in truth\nset; Pu: Purity, defined as common items divided by total items in the test\nset.', 'Comparison of SynFind, MCScanX, and iADHoRe on curated data sets.\n(A) Arabidopsis thaliana alpha, beta,\nand gamma duplicates from Bowers et al. (2003). (B) Yeast\ngenomes from YGOB (Byrne and Wolfe 2005). (C) Grass genomes\nfrom Schnable et al. (2012).\nSn: sensitivity, defined as common items divided by total items in truth\nset; Pu: Purity, defined as common items divided by total items in the test\nset.', 'The list of predicted locations for missing genes is often good indication of\npotential loss-of-function, which could be associated with differences in phenotypic\nand physiological traits between grasses, as illustrated in our Ha\nexample. Missing genes in one grass genome versus others could also suggest possible\nmisassemblies, leading to iterative improvement of genome assemblies and recovery of\nmissing gene fragments in genome annotation efforts (Law et al. 2015).', 'Integration in CoGe permits SynFind to be tightly connected to thousands of genomes\nas well as to downstream analysis tools such as GEvo (Lyons and Freeling 2008) and SynMap (Lyons et al. 2008) for micro and whole-genome syntenic\nanalysis, respectively. The method for selecting query and target genomes loads the\nsame module. SynFind automatically generates links to GEvo views for gene-centric\nanalyses as well as SynMap views for chromosome-level analyses. The open-ended\nanalysis workflow provides the users with enough flexibility between tools of\ndifferent scales. In addition, CoGe’s user-data management systems let\nresearches add private genomes and share them with collaborators, create lists\n(notebooks) of genomes that can be imported quickly into SynFind, and automatically\nrecord links to regenerate any analysis performed.', 'The CoGe job execution (JEX) framework facilitates parallel processing of queries\nagainst multiple genomes by using Work Queue (Thrasher et al. 2012) (fig.\n6). When a SynFind analysis runs, each pairwise workflow consisting of\nseparate query-target genome pairs is submitted to CoGe’s JEX framework. The\nJEX framework controls the parallel computing in processing multiple genomes (fig. 6). It first checks to see whether the\nanticipated results file already exists and retrieves that file if it does,\notherwise, it submits the analysis for processing and subsequently caches the results\nfile. This system permits reusing the results of previously run analysis as well as\nrunning multiple workflows in parallel. For example, in contrast to other gene\nclustering approaches, new genomes can be incrementally added to the target list and\nthe CoGe server would only need to compute the missing comparisons. Overall, this\ngreatly improves the performance of the system in terms of the time it takes to\ncomplete an analysis. Additionally, if a user decides to modify and rerun an\nanalysis, recomputation starts from the first divergent step of the analysis, while\nreusing data from earlier, identically configured steps, allowing fast tweaking of\nparameters. Fig. 6.—SynFind computational workflow as implemented on CoGe. The query genome and\ntarget list of genomes are processed in parallel—extracting coding\nsequences, building homology lists, filtering tandem repeats, and running\nSynFind algorithm. The last step assembles the processed data into a master\ntable. This strategy is similar to the “Map-Reduce” paradigm\nused in parallel computing.', 'SynFind computational workflow as implemented on CoGe. The query genome and\ntarget list of genomes are processed in parallel—extracting coding\nsequences, building homology lists, filtering tandem repeats, and running\nSynFind algorithm. The last step assembles the processed data into a master\ntable. This strategy is similar to the “Map-Reduce” paradigm\nused in parallel computing.', 'The scale of analysis in comparative genomics is an important issue. Although SynMap\nexcels in identifying large-scale structural similarities, it lacks the gene-centric\nsearches where researchers just want to study their genes of interest across a set of\ngenomes. This conceptual difference was often referred to as\n“macrosynteny” versus “microsynteny” analyses in comparative\ngenomics. Microsynteny search tools, such as SynFind, achieve higher sensitivity and\nmore flexibility for gene-centric research. Although SynMap is necessarily\nconstrained to making pairwise comparisons between genomes, SynFind can\nsimultaneously launch comparisons of multiple genomes. Additionally, SynFind\nidentifies syntenic locations even when the gene itself is absent, either as a result\nof lineage-specific gene deletion or lineage-specific gene insertion. Analyses based\non SynMap output required substantial customized offline postprocessing and analysis\nto generate equivalent predicted locations (Schnable et al. 2012). Importantly, both of these tools permit on-the-fly\nanalyses and allow direct manipulation of parameters (e.g., higher or lower\nstringency, such as window size and “score cutoff”), and are\ninterconnected in order to characterize and validate patterns of genome structure and\ndynamics.', 'A typical exploratory workflow that we recommend would be to 1) use SynMap to\ncharacterize genome-wide rearrangements and possibly genome duplications, 2) zoom-in\non a pair of contigs or chromosomes with interesting rearrangement or duplication\npattern, 3) select a gene to fish out additional syntenic regions using SynFind, and\n4) validate putatively syntenic regions using GEvo to ensure that each region covered\nthe entire region of interest. In real-world applications, the combination of SynFind\nand SynMap can both be applied to offer complementary views. For example, in a study\nof conservation of imprinting across a set of grass taxa, gene-level comparisons were\nmade between syntenic genes in the genomes of maize, rice, and sorghum using the\nsoftware SynMap followed by SynFind to offer the most coverage (Waters et al. 2013).', 'The SynFind algorithm addresses important limitations and challenges in the\npostgenomics era. Researchers have access to large and inexpensive sequencing power\nmaking it possible to study genetic and genomic evolution across whole clades of\nspecies rather than being confined to individual model organisms. However, in order\nto unlock the potential power of comparative genomic approaches to accelerate studies\nof the origin, regulation, and function of individual genes it is necessary to enable\nthe broadest possible range of scientists to make direct comparisons across the\ngenomes of large groups of related species. Online computational resources, such as\nCoGe, create ecosystems of specialized applications that are easily linked to and\nfrom one another. Similarly, resources developed by cyberinfrastructure projects such\nas the iPlant Collaborative (Goff et al.\n2011) and XSEDE provide computational platforms that enable scalable access\nto computing and data storage resources.', 'The development of computational ecosystems which will be successful in bringing\nabout a democratization of bioinformatics research requires the deployment of modular\nanalysis pipelines that allow each new tool to exploit existing computational\nresources, architectures, and curated data sets. SynFind joins the increasing list of\nCoGe-powered and iPlant-enabled applications (Goff et al. 2011), which already\ninclude GEvo, SynMap, and many others. The availability of SynFind will begin to\nmerge the two analytical worlds of comparative and functional genomics such that\nresearchers can more easily transfer system-level functional knowledge from data-rich\nmodel organisms to the thousands of others organisms being analyzed by only a handful\nof scientists. Conversely, SynFind enables comparative, in silico studies across a\nwide range of species to inform the study of specific genes within model organisms,\nwhere even today 30–34% of all genes have no annotated function (data\nfrom Arabidopsis thaliana, as cited in the National Plant Genome Initiative 2014 report).', 'SynFind fills the current gap of algorithm that performs syntenic gene queries and\ncompiles matching set of genomic regions on-the-fly. SynFind identifies all syntenic\nregions to a given gene in a user-selected set of genomes, regardless of whether the\ngene is still present in that region. SynFind is powered by an algorithm that calculates\nsynteny score between a pair of regions. Performance-wise, SynFind has higher\nsensitivity but lower purity compared with competing tools when validated against\nmanually curated sets. Feature-wise, SynFind contains several key functions not\ntypically found in existing systems (table\n1). Integrated with the CoGe online platform and powered by the iPlant\nproject, syntenic queries can now be performed in an interactive manner and retrieved\nfor downstream analyses through SynFind in a scalable and reproducible manner. SynFind\nis an important tool for assessing genome dynamics including gene transpositions, impact\nof genome duplications, and correlation to functional changes across a set of related\ntaxa of interest.', 'SynFind is available for use through a web-based interface in CoGe. Data sets used in\nbenchmarking SynFind with related tools are available on figshare with the following\npublic DOI: Tang, Haibao (2015): SynFind supporting data: Benchmark on three curated\nsyntenic gene sets. figshare. http://dx.doi.org/10.6084/m9.figshare.1589735 (last accessed\nNovember 30, 2015)\n', 'Tang, Haibao (2015): SynFind supporting data: Benchmark on three curated\nsyntenic gene sets. figshare. http://dx.doi.org/10.6084/m9.figshare.1589735 (last accessed\nNovember 30, 2015)', 'The authors thank the Fujian provincial government for a Fujian “100 Talent\nPlan” award to H.T. E.L. is supported by the Gordon and Betty Moore Foundation\ngrant number 3383 and the National Science Foundation grant number DBI – 1265383.\niPlant is supported by the National Science Foundation under grant numbers DBI-0735191\nand DBI-1265383. They also thank Zhenghui Zhong for providing help in benchmarking the\nperformance of SynFind. They declare that they have no competing interests.']
* generating document 6....
